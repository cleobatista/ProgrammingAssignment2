#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
totalrow
df<-data.frame(totalrow[,1],totalrow[,2])
df
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
totalrow
df<-data.frame(totalrow[,1],totalrow[,2])
colnames(df,c("id","nobs")
}
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
totalrow
df<-data.frame(totalrow[,1],totalrow[,2])
colnames(df,c("id","nobs"))
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
df<-data.frame(totalrow[,1],totalrow[,2])
colnames(df,c("id","nobs"))
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
df<-data.frame(totalrow[,1],totalrow[,2])
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
totalrow<-c("id","nobs")
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
totalrow=rbind(totalrow,numirow)
}
df<-data.frame(totalrow[,1],totalrow[,2])
df
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(i==min(a))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
df<-data.frame(totalrow[,1],totalrow[,2])
df
}
complete("specdata",c(2, 4, 8, 10, 12))
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(i==min(a))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
df<-data.frame(totalrow[,1],totalrow[,2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata",c(2, 4, 8, 10, 12))
complete("specdata", 1)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(i==min(a))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(lenght(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[,2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 1)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(i==min(a))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(length(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[,2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 1)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(i==min(a))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(length(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 1)
complete("specdata", 30:25)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(exists(totalrow))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(length(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 30:25)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(exists("totalrow"))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(length(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 30:25)
complete<-function(directory,id=1:332){
#this will load the directory
files <- dir(path= directory, pattern="*.csv", full.names = TRUE)
tables <- lapply(files, read.csv)
do.call(rbind, tables)
loadPol<-load_data(directory)
#this will select the full observed rows
good<-complete.cases(loadPol)
pol<-loadPol[good,]
#this will select the range
a<-id
#this will return the query
for(i in a){
newRow<-subset(pol, ID==i)
numirow<-c(i,nrow(newRow))
if(!exists("totalrow"))
{totalrow<-numirow}
else
{totalrow=rbind(totalrow,numirow)}
}
if(length(a)>1)
df<-data.frame(totalrow[,1],totalrow[,2])
else
df<-data.frame(totalrow[1],totalrow[2])
colnames(df) <- c("id", "nobs")
df
}
complete("specdata", 30:25)
complete("specdata", 3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
install(RCurl)
install.packages("RCurl")
submit()
source("complete.R")
x <- complete("specdata")
source("complete.R")
x <- complete("specdata")
length(x$id[x$nobs == 0])
?cor
var(1:10)
cov(1:10,2:11)
cov(1:10,2:11)
cov(1:10,2:11)
cov(1:10,c(1,2,5,8,20,4,6,8,3,3))
cov(1:10)
iris
good<-complete.cases(iris)
good
pol<-loadPol[good,]
pol<-load_data(iris)
?load_data
??load_data
pol<-iris[good,]
pol
mean(pol[,Sepal.Length])
head(pol)
apply(pol, mean)
poldt<-data.frame(pol)
poldt
pol$Sepal.Length
mean(pol$Sepal.Length)
poldt<-data.frame(pol)
?wich
?which
which(pol$Sepal.Length,pol$Species=="virginica")
which(pol$,pol$Species=="virginica")
which(pol,pol$Species=="virginica")
pol[,1]
subset(pol,Species=="virginica")
poldt<-subset(pol,Species=="virginica")
mean(poldt$Sepal.Length)
apply(iris,mean)
apply(iris,1,mean)
apply(complete.cases(iris),1,mean)
apply(complete.cases(iris),12,mean)
apply(complete.cases(iris),2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
mtcars
mt<-mtcars
with(mtcars,tapply(mpg, cyl,mean))
?tapply
tapply(mpg,cyl,mean)
?with
tapply(hp,cyl,mean)
with(mtcars,tapply(hp, cyl,mean))
with(mtcars,tapply(hp, cyl=4,mean))
with(mtcars,tapply(hp, cyl==4,mean))
a<-subset(mtcars,cyl=4)
a
a<-subset(mtcars,cyl==4)
a
mean(a)
mean(a$hp)
a1<-mean(a)
a1<-mean(a$hp)
a1
b<-subset(mtcars,cyl==8)
b
b1<-mean(b$hp)
b1
a1-b1
debug(ls)
ls()
stop
q
debug(ls)
ls
ls()
?ls
x<-2
x
?ls
?ls
ls
ls()
?debug
debug(ls)
ls()
ls
complete
complete()
ls
ls(a)
makeCacheMatrix <- function(x = matrix()) {
s <- NULL
set <- function(y) {
x <<- y
s <<- NULL
}
get <- function() x
setinverse <- function(solve) s <<- solve
getinverse <- function() s
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
s <- x$getinverse()
if(!is.null(s)) {
message("getting inverse matrix")
return(s)
}
data <- x$get()
s <- solve(data, ...)
x$setinverse(s)
s
}
test<-makeCacheMatrix(rbind(c(1,-2,3),c(0,-2,2),c(-4,6,-7)))
test
cacheSolve
x$getinverse
test$set
test$get
k<-rbind(c(1,-2,3),c(0,-2,2),c(-4,6,-7))
k
makeCacheMatrix(k)
j<-makeCacheMatrix(k)
j$get
source("makeCacheMatrix()")
setwd("/media/cleo/Dados/Documentos/workspace_coursera/r_prog/ProgrammingAssignment2")
source("makeCacheMatrix()")
source("cachematrix.R")
k<-rbind(c(1,-2,3),c(0,-2,2),c(-4,6,-7))
j<-makeCacheMatrix(k)
j$get
j$get()
j$getinverse()
cacheSolve(j)
j$getinverse()
cacheSolve(j)
j$get()
source("makeCacheMatrix()")
setwd("/media/cleo/Dados/Documentos/workspace_coursera/r_prog/ProgrammingAssignment2")
setwd("/media/cleo/Dados/Documentos/workspace_coursera/ProgrammingAssignment2")
source("makeCacheMatrix()")
source("cacheMatrix.R")
source("cachematrix.R")
k<-rbind(c(1,-2,3),c(0,-2,2),c(-4,6,-7))
j<-makeCacheMatrix(k)
j$get()
j$getinverse()
cacheSolve(j)
j$getinverse()
j$get()
